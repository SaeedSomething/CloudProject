Phase 2 – Kubernetes (2 point) 
In this phase, the project will migrate from Docker Compose to Kubernetes for improved scalability 
and management. The previous docker-compose.yml file is no longer applicable, and all project 
configurations must be defined within Kubernetes YAML manifests. 
Step 1 – Install Kubernetes: For setting up the Kubernetes cluster, Kind is the preferred tool, but 
alternative solutions are also acceptable. 
Step 2 – The following conditions must be met in this phase: 
• The Kubernetes cluster must consist of at least three nodes: one master node and two worker 
nodes. 
• Deploy all services and applications using Kubernetes Deployments, Pods, Services, ... . 
• Each service and its corresponding database must be organized into separate namespaces. 
• Utilize ConfigMaps to store and manage environment variables and configuration settings. 
• Secure sensitive credentials, such as database usernames and passwords, using Secrets. 
• Database access must be restricted to within the Kubernetes cluster. 
• Ensure data persistence by preventing database data loss after restarting. This should be 
achieved by utilizing Volumes, implementing Persistent Volume Claims (PVCs) and 
Persistent Volumes (PVs) for deployments. 
• Set resource limits for each service to control RAM and CPU usage efficiently. 
• Each Deployment must be scheduled on a dedicated node, ensuring proper distribution across 
the cluster. 
• All the networking that was implemented in Docker in the previous phase must also be 
maintained in this phase.  
• Do not place all Kubernetes yml configuration in a single file. 
 
Recommended Resource 
• kind 
• Kubernetes 