apiVersion: v1
kind: ConfigMap
metadata:
    name: nginx-config
    namespace: core
data:
    nginx.conf: |
        events {
            worker_connections 1024;
        }

        http {
            # Auth service upstream (HTTP endpoint)
            upstream auth-service-backend {
                server auth-http.c9a4c1e532f44863d573d2be76f3eb17e201a93b-auth:8082 max_fails=3 fail_timeout=30s;
            }
            
            # Core service upstream
            upstream core-service-backend {
                server core:8080 max_fails=3 fail_timeout=30s;
            }
            
            # Manage service upstream
            upstream manage-service-backend {
                server manage.c9a4c1e532f44863d573d2be76f3eb17e201a93b-manage:8080 max_fails=3 fail_timeout=30s;
            }
            
            server {
                listen 80;
                
                # Auth service routes (HTTP API)
                location /auth/ {   
                    rewrite ^/auth(/.*)$ $1 break;

                    proxy_pass http://auth-service-backend;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_connect_timeout 30s;
                    proxy_send_timeout 30s;
                    proxy_read_timeout 30s;
                }
                
                # Core service routes
                location /core/ {
                    rewrite ^/core(/.*)$ $1 break;
                    proxy_pass http://core-service-backend;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_connect_timeout 30s;
                    proxy_send_timeout 30s;
                    proxy_read_timeout 30s;
                    sub_filter '/swagger-ui/' '/core/swagger-ui/';
                    sub_filter 'href="/swagger-ui' 'href="/core/swagger-ui';
                    sub_filter 'src="/swagger-ui' 'src="/core/swagger-ui';
                }
                
                # Manage service routes
                location /manage/ {
                    rewrite ^/manage(/.*)$ $1 break;

                    proxy_pass http://manage-service-backend;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_connect_timeout 30s;
                    proxy_send_timeout 30s;
                    proxy_read_timeout 30s;
                }
                
                # Health check endpoint for HAProxy
                location /health {
                    return 200 "healthy\n";
                    add_header Content-Type text/plain;
                }
            }
        }
